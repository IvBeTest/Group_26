"JSON"
 4. Создать внешний репозиторий c названием JSON  
             
  -- открыть https://github.com/  >
     перейти во вкладку "Repositories"  >
     задать имя и выставить необходимые настройки > 
     нажать  "Creat repository"

 5. Клонировать репозиторий JSON на локальный компьютер  
 
 -- войти в репозиторий, нажать вкладку "CODE" > 
    скопировать HTTPS ссылку > 
    открыть терминал в той папке куда поместим репозиторий и сделать команду git clon https://github.com/........./.........git  
                                                                
 6. Внутри локального JSON создать файл “new.json”  
            
 -- touch new.json

 7. Добавить файл под гит                                                        

 -- git add new.json

 8. Закоммитить файл                                                               

 -- git commit -m "new file"

 9. Отправить файл на внешний GitHub репозиторий                 

 -- git push

10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON

  -- vim new.json 
          {
             "full name": "Belik Ivan Vladimirovich",
                   "age": 32,
                  "pets": 1,
                "salary": "50 000 rub"
          }

    :wq сохранить и закрыть

 11. Отправить изменения на внешний репозиторий                  

 -- git add . > 
    git commit -m "modif" > 
    git push

 12. Создать файл preferences.json                                          

 -- touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON 
 
 -- vim preferences.json
          {
                 "favorite films":[ "Брат", "Брат2", "Сёстры" ],
             "favorite TV series": "Ликвидация",
                 "favourite dish": "Борщ",
                "favorite season": "Лето",
              "country to travel": "Канада"
          }
   :wq сохранить и закрыть

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON              

  -- touch sklls.json > 
     vim sklls.json
         {
             "Soft skills": [ 
	                    {
                              "1": "Коммуникативные навыки",
                              "2": "Стрессоустойчивость",
                              "3": "Склонность к исследовательской деятельности",
                              "4": "Навыки тайм-менеджмента" }
                            ],
             "Hard skills": [
                            { 
                              "1": "Понимание процессов тестирования и разработки ПО",
                              "2": "Знание методологий тестирования",
	                      "3": "Работа с тестовой документацией",
	                      "4": "Работа с Terminal",
		              "5": "Работа с GitHub",
		              "6": "Работа с Dev Tools",
		              "7": "Программирование на Python",
		              "8": "Мобильное тестирование" } 
			   ]
       }
   :wq сохранить и закрыть

15. Отправить сразу 2 файла на внешний репозиторий      

-- git add . > 
   git commit -m "new file" > 
   git push

16. На веб интерфейсе создать файл bug_report.json    
   
 -- войти в репозиторий > 
    нажать на вкладку "add file"  и выбрать "create new file" > 
    задаём имя, расширение файлу и нажимаем "commit new file"

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе

 -- войти в репозиторий > 
    нажать на вкладку "add file"  и выбрать "create new file" > 
    задаём имя, расширение файлу и нажимаем "commit new file"

18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON 

-- открыть файл bug_report.json > 
   нажать "Edit this file" > 
   внести текст и нажать "Commit changes"
       {
               "ID": 19,
          "Summary": " Не работает оплата картой в корзине ",
     "Precondition": [
                     {" login":"limpopo@mail.ru", "password":"zaq123", "номер карты":"4444555577779999", "срок действия":"10.23", "ФИО":" Иванов Иван Иванович", "CVV":"123"}
                     ],
      "Description": [
                     {" STR ":
                     [ 
                     {
                          "1":" Залогиниться www.купитрусы.ru ", 
                          "2":" Добавить любой товар в корзину ", 
                          "3":" Оформить заказ, ввести данные карты",
                          "4":" Кнопка 'ОПЛАТИТЬ' не реагирует на нажатие"}
                     ]
                     },
            {"Actual result ":" Кнопка 'ОПЛАТИТЬ' не реагирует на клик"},
          {"Expected result ":" Переход на страницу  банка-эмитента карты, получение чека. Оплата успешно завершена"}
                     ],
        "Component": " Оплата картой VIZA ",
         "Severity": " Critical ",
         "Priority": " High ",
           "Status": " Submitted ",
           "Author": " QA Engineer Belik Ivan ",
      "Assigned To": " QA Manager ",
          "Version": "1.03.2", 
      "Environment": " Windows 10 Pro 19042.1415 , Google Chrome v.96.0.4664.110 "
     }

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе   

 -- после редактирования файла нажать  "Commit changes"

 20. Синхронизировать внешний и локальный репозиторий JSON               

 -- открыть терминал и выполнить команды
    git pull 
    git add .
    git commit
    git push
